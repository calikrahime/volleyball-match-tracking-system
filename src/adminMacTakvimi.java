
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author rahimecalik
 */
public class adminMacTakvimi extends javax.swing.JFrame {

    /**
     * Creates new form adminMacTakvimi
     */
    public adminMacTakvimi() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonMacTakvimi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMacTakvimi = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonMacTakvimi.setText("Mac Takvimi");
        jButtonMacTakvimi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMacTakvimiActionPerformed(evt);
            }
        });

        jTableMacTakvimi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableMacTakvimi);

        jButton2.setText("Görüntüle");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Ekle");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Sil");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("Tarih");

        jLabel2.setText("Yer");

        jLabel3.setText("İlk Takım");

        jLabel4.setText("Skor");

        jLabel5.setText("İkinci Takım");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Exit");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("Exit");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Back");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Back");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(53, 53, 53)
                .addComponent(jLabel3)
                .addGap(52, 52, 52)
                .addComponent(jLabel4)
                .addGap(69, 69, 69)
                .addComponent(jLabel5)
                .addGap(92, 92, 92))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(59, 59, 59)
                .addComponent(jButton3)
                .addGap(64, 64, 64)
                .addComponent(jButton4)
                .addGap(112, 112, 112))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jButtonMacTakvimi)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jButtonMacTakvimi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton3)))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        
        adminEkran ekran= new adminEkran();
        ekran.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenu2ActionPerformed
public DefaultTableModel veriGetir() throws SQLException {
    Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/proje", "root", "Rahime4588");
    Statement s = c.createStatement();
    // "takvim" tablosundaki tüm verileri seçme
    ResultSet resultSet = s.executeQuery("SELECT * FROM proje.takvim");
      // Meta verileri alma      
    ResultSetMetaData metaData = resultSet.getMetaData();
    int sütunSayısı = metaData.getColumnCount();
            
    DefaultTableModel model = new DefaultTableModel();
    // Sütun adlarını modele ekleme
    for (int i = 1; i <= sütunSayısı; i++) {
        model.addColumn(metaData.getColumnName(i));
    }
    // Sonuç setindeki satırları modele ekleme
    while (resultSet.next()) {
        Object[] row = new Object[sütunSayısı];
        for (int i = 1; i <= sütunSayısı; i++) {
            row[i - 1] = resultSet.getObject(i);
        }
        model.addRow(row);
    }
                    
    resultSet.close();
    s.close();
    c.close();
    
    return model;
}
    private void jButtonMacTakvimiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMacTakvimiActionPerformed
 
        try {
            // veriGetir metodunu çağırarak veritabanından verileri al
    DefaultTableModel model = veriGetir();
    // Alınan verileri jTableMacTakvimi'ye ayarla
    jTableMacTakvimi.setModel(model);
} catch (SQLException ex) {
    // SQL hatası durumunda hata mesajını yazdır
    ex.printStackTrace();
} 
    }//GEN-LAST:event_jButtonMacTakvimiActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     
        try {
            // veriGetir metodunu çağırarak veritabanından verileri al
    DefaultTableModel model = veriGetir();
    // Alınan verileri jTableMacTakvimi'ye ayarla
    jTableMacTakvimi.setModel(model);
} catch (SQLException ex) {
    // SQL hatası durumunda hata mesajını yazdır
    ex.printStackTrace();
} 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       DefaultTableModel model = new DefaultTableModel();
        try {
    Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/proje", "root", "Rahime4588");
      // Veritabanına veri eklemek için SQL sorgusu
String insertQuery = "INSERT INTO takvim (tarih, yer, ilkTakim, skor, ikinciTakim) VALUES (?, ?, ?, ?, ?)";
PreparedStatement st = c.prepareStatement(insertQuery);

// TextField'lardan kullanıcı girdilerini alma
String tarih = jTextField1.getText();
String yer = jTextField2.getText();
String ilkTakim = jTextField3.getText();
String skor = jTextField4.getText();
String ikinciTakim = jTextField5.getText();

// TextField'ların boş olup olmadığını kontrol et
    if (tarih.isEmpty() || yer.isEmpty() || ilkTakim.isEmpty() || ikinciTakim.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Lütfen skor hariç tüm alanları doldurun.", "Uyarı", JOptionPane.WARNING_MESSAGE);
        return; // İşlemi sonlandır
    }


// SQL sorgusu için parametreleri ayarla
st.setString(1, tarih);
    st.setString(2, yer);
  st.setString(3, ilkTakim);
   st.setString(4, skor);
    st.setString(5, ikinciTakim);
     // SQL sorgusunu çalıştır ve veri ekle
    st.executeUpdate();
    JOptionPane.showMessageDialog(null, "Seçilen kullanıcı başarıyla eklendi.");
    st.close();
    c.close();
    // TextField'ları temizle
  jTextField1.setText("");
    jTextField2.setText("");
    jTextField3.setText("");
    jTextField4.setText("");
    jTextField5.setText("");
        } catch (SQLException ex) {
            // SQL hatası durumunda hata mesajını yazdır
    ex.printStackTrace(); 
    
}
    
 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // Kullanıcının seçtiği satırın indeksini al
            int selectedRow = jTableMacTakvimi.getSelectedRow();
             // Eğer kullanıcı hiçbir satır seçmemişse, uyarı mesajı göster
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Lütfen silinecek satırı seçin.");
            } else {
                // Veritabanına bağlantı kur
                Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/proje","root","Rahime4588");
                Statement s = c.createStatement();
// Seçilen satırın üçüncü sütunundaki veriyi al
                Object ilkTakimObject = jTableMacTakvimi.getModel().getValueAt(selectedRow, 2);
                String ilkTakimToDelete;
                // Eğer veri String türündeyse, bu veriyi silinecek takım ismi olarak kullan
                if (ilkTakimObject instanceof String) {
                    ilkTakimToDelete = (String) ilkTakimObject;
                } else {
                    // Eğer veri türü uygun değilse, hata fırlat
                    throw new IllegalArgumentException("Değişken tipi hatası oluştu.");
                }

                // Veritabanından ilgili kaydı sil
                String sql = "DELETE FROM proje.takvim WHERE ilkTakim = '" + ilkTakimToDelete + "'";
                s.executeUpdate(sql);

                // JTable'den satırı kaldır
                ((DefaultTableModel) jTableMacTakvimi.getModel()).removeRow(selectedRow);

                s.close();
                c.close();
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            // SQL hatası durumunda hata mesajını yazdır ve kullanıcıya bildirim yap
            JOptionPane.showMessageDialog(null, "Veritabanı işlemi sırasında bir hata oluştu.");
        } catch (IllegalArgumentException ex) {
            // Hatalı veri türü durumunda hata mesajını yazdır ve kullanıcıya bildirim yap
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "Sütun hatalı türde veri içeriyor.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
       adminEkran ekran = new adminEkran();
       ekran.setVisible(true);
       dispose();
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
       dispose();
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminMacTakvimi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminMacTakvimi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminMacTakvimi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminMacTakvimi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminMacTakvimi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonMacTakvimi;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMacTakvimi;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
